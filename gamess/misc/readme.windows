Installing GAMESS on Microsoft Windows systems with PGI
   May 11, 2010 - Sarom Sok - Iowa State University

Software requirements
=====================

1) Windows operating system:
   Windows 32-bit (Windows XP, Vista, 7, Compute Cluster, Server 2003/2008 HPC Edition)
   Windows 64-bit (Windows XP, Vista, 7, Compute Cluster, Server 2003/2008 HPC Edition)

2) The Portland Group PGI Workstation 10.4 - http://www.pgroup.com/
   You will want to install the Cygwin package that is included with the PGI Workstation package. 

   PGI offers a 15 day trial license for PGI Workstation.

3) Microsoft MS-MPI.  You can get the stand-alone package here:
   http://www.microsoft.com/downloads/details.aspx?displaylang=en&FamilyID=a9cb0038-26f2-45a5-9ca7-4e5c89727a1d

   If for some reason the link does not work then you may want to just want to perform a search
   for "HPC Pack 2008 SP1 MS-MPI Stand-alone Package".

   If you are on a 32-bit system, install the 32-bit version of MS-MPI.
   If you are on a 64-bit system, install the 64-bit version of MS-MPI.

   ** PLEASE RESTART YOUR COMPUTER AFTER INSTALLING MS-MPI **

   This will allow Windows to update the PATH variable.

Contents of the "gamess/machines/microsoft" folder:
===================================================

parameters.gms
 - This file is  used by rungms.bat 

parameters.hpc.gms
 - This file is used by rungms.hpc.beta.bat and rungms.hpc.release.bat

runall.bat
 - A batch file that will run all the exam files in gamess/tests
 - This file is only executable under Windows's command prompt, cmd.exe

runall.parallel
 - The Windows version of the runall shell script.
 - This file is only executable under PGI's Cygwin
 - This shell script will run all the exam files in parallel mode (4 compute processes).

runall.serial
 - The Windows version of the runall shell script.
 - This file is only executable under PGI's Cygwin
 - This shell script will run all the exam files in serial mode (1 compute process).

rungms.windows
 - The Windows version of the rungms shell script. 
 - This file is only executable under PGI's Cygwin

rungms.bat
 - A batch file equivalent to the rungms shell script specifically written for non-HPC server Windows machines.
 - This file is only executable under Windows's command prompt, cmd.exe
rungms.hpc.beta.bat
 - A batch file equivalent to the rungms shell script specifically written for Windows HPC Server 2008 Release Beta.
 - This file is only executable under Windows's command prompt, cmd.exe
rungms.hpc.release.bat
 - A batch file equivalent to the rungms shell script specifically written for Windows HPC Server 2008.
 - This file is only executable under Windows's command prompt, cmd.exe

scr
 - The RESTART folder used to store GAMESS restart files (.dat, .rst, .trj, .efp, etc)
 - This folder is empty.

tmp
 - The SCRATCH folder used to store scratch files during a GAMESS run
 - This folder is empty.

Contents of the "gamess/machines/microsoft/windows" folder:

gamess.append.diskusage.bat
 - A batch file used by Windows HPC runs.
gamess.clean.bat
 - A batch file used by Windows HPC runs.
gamess.diskusage.bat
 - A batch file used by Windows HPC runs.
gamess.finish.bat
 - A batch file used by Windows HPC runs.
gamess.finish.gddi.bat
 - A batch file used by Windows HPC runs.
gamess.gddi.output.bat
 - A batch file used by Windows HPC runs.
gamess.start.bat
 - A batch file used by Windows HPC runs.
gamess.start.gddi.bat
 - A batch file used by Windows HPC runs.
gmsenv.bat
 - A batch file used by non-HPC runs.
gmsenv.hpc.bat
 - A batch file used by Windows HPC runs.

Compiling and Linking GAMESS
============================

This is very much like Unix, using the same scripts.
Hence, the file "gamess/misc/readme.unix" may be helpful.

a) Use the "gamess/config" script to configure GAMESS and DDI for Windows.

b) Go inside "gamess/ddi" and run "./compddi" to compile DDI.  This will 
produce a file "libddi.a"

c) Go inside "gamess" and run "./compall" to compile the GAMESS object files.

d) Then run "./lked" to link the GAMESS object files to the DDI library,
which will produce gamess.00.x

** If you plan to run with the batch script then you will need to rename gamess.00.x to gamess.00.exe

At this stage you have successfully built the GAMESS binary.

Execution of GAMESS
===================

This is in fact rather different from Unix!

However, in order to run GAMESS you will need to copy all the contents 
of "gamess/machines/microsoft" into "gamess"

** You will need to modify "rungms.windows" before you can use it - 
change line 61, 87 and 88 to the appropriate values.

** You will need to modify "parameters.gms" before you can use "rungms.bat" - 
change "parameters.gms" to the appropriate values.

You can run GAMESS by executing "./rungms.windows" under PGI-CYGWIN or by 
executing "rungms.bat" under the Windows Command Prompt (cmd.exe)

Examples:

The following example will run exam01 with 4 compute processes using 
gamess.00.x with rungms.windows

./rungms.windows exam01 00 4 0

The following example will run exam01 with 4 compute processes using 
gamess.00.exe with rungms.bat

rungms.bat exam01 00 4 0

Known Issues
============

May 11, 2010 - 2 GB physical file size limitations on both Windows 32-bit and Windows-64 bit.
             - We are currently looking into this.
             - Workarounds - push everything into memory.
             - Use: $SCF   DIRSCF=.T. $END
             - Use: $TRANS DIRTRF=.T. $END

